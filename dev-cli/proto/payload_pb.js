/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var template_pb = require('./template_pb.js');
goog.exportSymbol('proto.template_pb.Create', null, global);
goog.exportSymbol('proto.template_pb.Delete', null, global);
goog.exportSymbol('proto.template_pb.Method', null, global);
goog.exportSymbol('proto.template_pb.RPCRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.template_pb.RPCRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.template_pb.RPCRequest.oneofGroups_);
};
goog.inherits(proto.template_pb.RPCRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.template_pb.RPCRequest.displayName = 'proto.template_pb.RPCRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.template_pb.RPCRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.template_pb.RPCRequest.MethodCase = {
  METHOD_NOT_SET: 0,
  CREATE: 1,
  DELETE: 2
};

/**
 * @return {proto.template_pb.RPCRequest.MethodCase}
 */
proto.template_pb.RPCRequest.prototype.getMethodCase = function() {
  return /** @type {proto.template_pb.RPCRequest.MethodCase} */(jspb.Message.computeOneofCase(this, proto.template_pb.RPCRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.template_pb.RPCRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.template_pb.RPCRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.template_pb.RPCRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.template_pb.RPCRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    create: (f = msg.getCreate()) && proto.template_pb.Create.toObject(includeInstance, f),
    pb_delete: (f = msg.getDelete()) && proto.template_pb.Delete.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.template_pb.RPCRequest}
 */
proto.template_pb.RPCRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.template_pb.RPCRequest;
  return proto.template_pb.RPCRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.template_pb.RPCRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.template_pb.RPCRequest}
 */
proto.template_pb.RPCRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.template_pb.Create;
      reader.readMessage(value,proto.template_pb.Create.deserializeBinaryFromReader);
      msg.setCreate(value);
      break;
    case 2:
      var value = new proto.template_pb.Delete;
      reader.readMessage(value,proto.template_pb.Delete.deserializeBinaryFromReader);
      msg.setDelete(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.template_pb.RPCRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.template_pb.RPCRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.template_pb.RPCRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.template_pb.RPCRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.template_pb.Create.serializeBinaryToWriter
    );
  }
  f = message.getDelete();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.template_pb.Delete.serializeBinaryToWriter
    );
  }
};


/**
 * optional Create create = 1;
 * @return {?proto.template_pb.Create}
 */
proto.template_pb.RPCRequest.prototype.getCreate = function() {
  return /** @type{?proto.template_pb.Create} */ (
    jspb.Message.getWrapperField(this, proto.template_pb.Create, 1));
};


/** @param {?proto.template_pb.Create|undefined} value */
proto.template_pb.RPCRequest.prototype.setCreate = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.template_pb.RPCRequest.oneofGroups_[0], value);
};


proto.template_pb.RPCRequest.prototype.clearCreate = function() {
  this.setCreate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.template_pb.RPCRequest.prototype.hasCreate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Delete delete = 2;
 * @return {?proto.template_pb.Delete}
 */
proto.template_pb.RPCRequest.prototype.getDelete = function() {
  return /** @type{?proto.template_pb.Delete} */ (
    jspb.Message.getWrapperField(this, proto.template_pb.Delete, 2));
};


/** @param {?proto.template_pb.Delete|undefined} value */
proto.template_pb.RPCRequest.prototype.setDelete = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.template_pb.RPCRequest.oneofGroups_[0], value);
};


proto.template_pb.RPCRequest.prototype.clearDelete = function() {
  this.setDelete(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.template_pb.RPCRequest.prototype.hasDelete = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.template_pb.Create = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.template_pb.Create, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.template_pb.Create.displayName = 'proto.template_pb.Create';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.template_pb.Create.prototype.toObject = function(opt_includeInstance) {
  return proto.template_pb.Create.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.template_pb.Create} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.template_pb.Create.toObject = function(includeInstance, msg) {
  var f, obj = {
    params: (f = msg.getParams()) && template_pb.Template.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.template_pb.Create}
 */
proto.template_pb.Create.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.template_pb.Create;
  return proto.template_pb.Create.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.template_pb.Create} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.template_pb.Create}
 */
proto.template_pb.Create.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new template_pb.Template;
      reader.readMessage(value,template_pb.Template.deserializeBinaryFromReader);
      msg.setParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.template_pb.Create.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.template_pb.Create.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.template_pb.Create} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.template_pb.Create.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParams();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      template_pb.Template.serializeBinaryToWriter
    );
  }
};


/**
 * optional Template params = 1;
 * @return {?proto.template_pb.Template}
 */
proto.template_pb.Create.prototype.getParams = function() {
  return /** @type{?proto.template_pb.Template} */ (
    jspb.Message.getWrapperField(this, template_pb.Template, 1));
};


/** @param {?proto.template_pb.Template|undefined} value */
proto.template_pb.Create.prototype.setParams = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.template_pb.Create.prototype.clearParams = function() {
  this.setParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.template_pb.Create.prototype.hasParams = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.template_pb.Delete = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.template_pb.Delete.repeatedFields_, null);
};
goog.inherits(proto.template_pb.Delete, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.template_pb.Delete.displayName = 'proto.template_pb.Delete';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.template_pb.Delete.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.template_pb.Delete.prototype.toObject = function(opt_includeInstance) {
  return proto.template_pb.Delete.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.template_pb.Delete} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.template_pb.Delete.toObject = function(includeInstance, msg) {
  var f, obj = {
    addressesList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.template_pb.Delete}
 */
proto.template_pb.Delete.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.template_pb.Delete;
  return proto.template_pb.Delete.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.template_pb.Delete} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.template_pb.Delete}
 */
proto.template_pb.Delete.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addAddresses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.template_pb.Delete.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.template_pb.Delete.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.template_pb.Delete} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.template_pb.Delete.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddressesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string addresses = 1;
 * @return {!Array<string>}
 */
proto.template_pb.Delete.prototype.getAddressesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.template_pb.Delete.prototype.setAddressesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.template_pb.Delete.prototype.addAddresses = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.template_pb.Delete.prototype.clearAddressesList = function() {
  this.setAddressesList([]);
};


/**
 * @enum {number}
 */
proto.template_pb.Method = {
  CREATE: 0,
  UPDATE: 1,
  DELETE: 2
};

goog.object.extend(exports, proto.template_pb);
