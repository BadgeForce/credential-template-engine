// Code generated by protoc-gen-go. DO NOT EDIT.
// source: template.proto

package template_pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _struct "github.com/golang/protobuf/ptypes/struct"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Template struct {
	Data                 *Data         `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Verification         *Verification `protobuf:"bytes,2,opt,name=verification,proto3" json:"verification,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Template) Reset()         { *m = Template{} }
func (m *Template) String() string { return proto.CompactTextString(m) }
func (*Template) ProtoMessage()    {}
func (*Template) Descriptor() ([]byte, []int) {
	return fileDescriptor_template_d67185749d720140, []int{0}
}
func (m *Template) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Template.Unmarshal(m, b)
}
func (m *Template) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Template.Marshal(b, m, deterministic)
}
func (dst *Template) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Template.Merge(dst, src)
}
func (m *Template) XXX_Size() int {
	return xxx_messageInfo_Template.Size(m)
}
func (m *Template) XXX_DiscardUnknown() {
	xxx_messageInfo_Template.DiscardUnknown(m)
}

var xxx_messageInfo_Template proto.InternalMessageInfo

func (m *Template) GetData() *Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Template) GetVerification() *Verification {
	if m != nil {
		return m.Verification
	}
	return nil
}

type Data struct {
	IssuerPub            string          `protobuf:"bytes,1,opt,name=issuer_pub,json=issuerPub,proto3" json:"issuer_pub,omitempty"`
	Name                 string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string          `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Type                 string          `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	CreatedAt            int64           `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Version              *Version        `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	CoreData             *_struct.Struct `protobuf:"bytes,7,opt,name=core_data,json=coreData,proto3" json:"core_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Data) Reset()         { *m = Data{} }
func (m *Data) String() string { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()    {}
func (*Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_template_d67185749d720140, []int{1}
}
func (m *Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data.Unmarshal(m, b)
}
func (m *Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data.Marshal(b, m, deterministic)
}
func (dst *Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data.Merge(dst, src)
}
func (m *Data) XXX_Size() int {
	return xxx_messageInfo_Data.Size(m)
}
func (m *Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Data proto.InternalMessageInfo

func (m *Data) GetIssuerPub() string {
	if m != nil {
		return m.IssuerPub
	}
	return ""
}

func (m *Data) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Data) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Data) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Data) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Data) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *Data) GetCoreData() *_struct.Struct {
	if m != nil {
		return m.CoreData
	}
	return nil
}

type Version struct {
	Major                int32    `protobuf:"varint,1,opt,name=major,proto3" json:"major,omitempty"`
	Minor                int32    `protobuf:"varint,2,opt,name=minor,proto3" json:"minor,omitempty"`
	Patch                int32    `protobuf:"varint,3,opt,name=patch,proto3" json:"patch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_template_d67185749d720140, []int{2}
}
func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (dst *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(dst, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetMajor() int32 {
	if m != nil {
		return m.Major
	}
	return 0
}

func (m *Version) GetMinor() int32 {
	if m != nil {
		return m.Minor
	}
	return 0
}

func (m *Version) GetPatch() int32 {
	if m != nil {
		return m.Patch
	}
	return 0
}

type Verification struct {
	Signature            string   `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	ProofOfIntegrityHash string   `protobuf:"bytes,2,opt,name=proof_of_integrity_hash,json=proofOfIntegrityHash,proto3" json:"proof_of_integrity_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Verification) Reset()         { *m = Verification{} }
func (m *Verification) String() string { return proto.CompactTextString(m) }
func (*Verification) ProtoMessage()    {}
func (*Verification) Descriptor() ([]byte, []int) {
	return fileDescriptor_template_d67185749d720140, []int{3}
}
func (m *Verification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Verification.Unmarshal(m, b)
}
func (m *Verification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Verification.Marshal(b, m, deterministic)
}
func (dst *Verification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Verification.Merge(dst, src)
}
func (m *Verification) XXX_Size() int {
	return xxx_messageInfo_Verification.Size(m)
}
func (m *Verification) XXX_DiscardUnknown() {
	xxx_messageInfo_Verification.DiscardUnknown(m)
}

var xxx_messageInfo_Verification proto.InternalMessageInfo

func (m *Verification) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *Verification) GetProofOfIntegrityHash() string {
	if m != nil {
		return m.ProofOfIntegrityHash
	}
	return ""
}

func init() {
	proto.RegisterType((*Template)(nil), "template_pb.Template")
	proto.RegisterType((*Data)(nil), "template_pb.Data")
	proto.RegisterType((*Version)(nil), "template_pb.Version")
	proto.RegisterType((*Verification)(nil), "template_pb.Verification")
}

func init() { proto.RegisterFile("template.proto", fileDescriptor_template_d67185749d720140) }

var fileDescriptor_template_d67185749d720140 = []byte{
	// 372 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x52, 0x4f, 0xeb, 0xd3, 0x40,
	0x10, 0x25, 0x36, 0x69, 0x9b, 0x69, 0x15, 0x5c, 0x0a, 0x8d, 0x52, 0xa1, 0x04, 0x84, 0x9e, 0x52,
	0xf0, 0xcf, 0xd1, 0x83, 0xe2, 0x41, 0xf1, 0xa0, 0xac, 0xe2, 0xc1, 0x4b, 0xd8, 0xa4, 0x9b, 0x64,
	0xa5, 0xcd, 0x2e, 0xbb, 0x93, 0x42, 0xbf, 0xb7, 0x1f, 0x40, 0x76, 0x92, 0xfc, 0x48, 0x7f, 0xb7,
	0x9d, 0xf7, 0xde, 0xbc, 0xe1, 0x3d, 0x16, 0x9e, 0xa1, 0xbc, 0x98, 0xb3, 0x40, 0x99, 0x19, 0xab,
	0x51, 0xb3, 0xd5, 0x38, 0xe7, 0xa6, 0x78, 0xb9, 0xab, 0xb5, 0xae, 0xcf, 0xf2, 0x48, 0x54, 0xd1,
	0x55, 0x47, 0x87, 0xb6, 0x2b, 0xb1, 0x97, 0xa6, 0x06, 0x96, 0xbf, 0x06, 0x31, 0x7b, 0x0d, 0xe1,
	0x49, 0xa0, 0x48, 0x82, 0x7d, 0x70, 0x58, 0xbd, 0x79, 0x9e, 0x4d, 0x5c, 0xb2, 0xcf, 0x02, 0x05,
	0x27, 0x9a, 0x7d, 0x80, 0xf5, 0x55, 0x5a, 0x55, 0xa9, 0x52, 0xa0, 0xd2, 0x6d, 0xf2, 0x84, 0xe4,
	0x2f, 0xee, 0xe4, 0xbf, 0x27, 0x02, 0x7e, 0x27, 0x4f, 0xff, 0x05, 0x10, 0x7a, 0x37, 0xf6, 0x0a,
	0x40, 0x39, 0xd7, 0x49, 0x9b, 0x9b, 0xae, 0xa0, 0xa3, 0x31, 0x8f, 0x7b, 0xe4, 0x47, 0x57, 0x30,
	0x06, 0x61, 0x2b, 0x2e, 0x92, 0xec, 0x63, 0x4e, 0x6f, 0xb6, 0x87, 0xd5, 0x49, 0xba, 0xd2, 0x2a,
	0x43, 0x97, 0x67, 0x44, 0x4d, 0x21, 0xbf, 0x85, 0x37, 0x23, 0x93, 0xb0, 0xdf, 0xf2, 0x6f, 0x7f,
	0xa8, 0xb4, 0x52, 0xa0, 0x3c, 0xe5, 0x02, 0x93, 0x68, 0x1f, 0x1c, 0x66, 0x3c, 0x1e, 0x90, 0x8f,
	0xc8, 0x32, 0x58, 0x5c, 0xa5, 0x75, 0xde, 0x70, 0x4e, 0x51, 0x36, 0x8f, 0xa3, 0x78, 0x8e, 0x8f,
	0x22, 0xf6, 0x0e, 0xe2, 0x52, 0x5b, 0x99, 0x53, 0x57, 0x0b, 0xda, 0xd8, 0x66, 0x7d, 0xc9, 0xd9,
	0x58, 0x72, 0xf6, 0x93, 0x4a, 0xe6, 0x4b, 0xaf, 0xf4, 0x69, 0xd3, 0x6f, 0xb0, 0x18, 0x9c, 0xd8,
	0x06, 0xa2, 0x8b, 0xf8, 0xab, 0x2d, 0x65, 0x8e, 0x78, 0x3f, 0x10, 0xaa, 0x5a, 0x6d, 0x29, 0xb0,
	0x47, 0xfd, 0xe0, 0x51, 0x23, 0xb0, 0x6c, 0x28, 0x6b, 0xc4, 0xfb, 0x21, 0x2d, 0x61, 0x3d, 0x6d,
	0x98, 0xed, 0x20, 0x76, 0xaa, 0x6e, 0x05, 0x76, 0x56, 0x8e, 0x4d, 0x3e, 0x00, 0xec, 0x3d, 0x6c,
	0x8d, 0xd5, 0xba, 0xca, 0x75, 0x95, 0xab, 0x16, 0x65, 0x6d, 0x15, 0xde, 0xf2, 0x46, 0xb8, 0x66,
	0x28, 0x77, 0x43, 0xf4, 0xf7, 0xea, 0xeb, 0x48, 0x7e, 0x11, 0xae, 0xf9, 0xf4, 0xf4, 0xcf, 0xf4,
	0x1f, 0x15, 0x73, 0xca, 0xf6, 0xf6, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9a, 0x02, 0xff, 0xaf,
	0x6d, 0x02, 0x00, 0x00,
}
